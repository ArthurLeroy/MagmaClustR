% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/V-training.R
\name{train_new_gp_EM}
\alias{train_new_gp_EM}
\title{Training new GP with the EM algorithm}
\usage{
train_new_gp_EM(data, param_mu_k, ini_hp_i, kern_i, hp_i = NULL)
}
\arguments{
\item{data}{A tibble or data frame. Columns required: \code{ID}, \code{Input}
, \code{Output}.
Additional columns for covariates can be specified.
The \code{ID} column contains the unique names/codes used to identify each
individual/task (or batch of data).
The \code{Input} column should define the variable that is used as
reference for the observations (e.g. time for longitudinal data). The
\code{Output} column specifies the observed values (the response
variable). The data frame can also provide as many covariates as desired,
with no constraints on the column names. These covariates are additional
inputs (explanatory variables) of the models that are also observed at each
reference \code{Input}.}

\item{param_mu_k}{list of parameters for the K mean Gaussian processes}

\item{ini_hp_i}{A tibble or data frame of hyper-parameters
associated with \code{kern_i}, the individual processes' kernel.
Required column : \code{ID}. The \code{ID} column contains the unique
names/codes used to identify each individual/task. The other columns
should be named according to the hyper-parameters that are used in
\code{kern_i}.}

\item{kern_i}{A kernel function, associated with the individual GPs. ("SE",
"PERIO" and "RQ" are also available here).}

\item{hp_i}{A named vector, tibble or data frame of hyper-parameters
associated with \code{kern_i}.}
}
\value{
A list, containing the results of the EM algorithm used for training
in MagmaClust. The elements of the list are:
\itemize{
\item theta_new :
\item tau_k :
}
}
\description{
Training new GP with the EM algorithm
}
\examples{
k = seq_len(3)
m_k <- c("K1" = 0, "K2" = 0, "K3" = 0)

db <- simu_db(N = 10, common_input = F)
hp_k <- MagmaClustR:::hp("SE", list_ID = names(m_k))
hp_i <- MagmaClustR:::hp("SE", list_ID = unique(db$ID))
ini_hp_i <- MagmaClustR:::hp("SE", list_ID = unique(db$ID))
old_tau_i_k = MagmaClustR:::ini_tau_i_k(db = db, k = length(k), nstart = 50)

training_test = train_magma_VEM(db, m_k, hp_k, ini_hp_i, "SE", "SE", old_tau_i_k, FALSE, FALSE, 0.1)

timestamps = seq(0.01, 10, 0.01)
mu_k <- posterior_mu_k(db, timestamps, m_k, "SE", "SE", training_test)


list_hp <- train_magma_VEM(db, m_k, hp_k, hp_i, "SE", "SE", old_tau_i_k, FALSE, FALSE, 0.1)

train_new_gp_EM(db, mu_k, ini_hp_i, "SE", hp_i = list_hp$hp_i)
}
