% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/V-plot-functions.R
\name{plot_magmaclust}
\alias{plot_magmaclust}
\title{Plot MagmaClust or GP predictions}
\usage{
plot_magmaclust(
  pred,
  x_input = NULL,
  cluster = "all",
  data = NULL,
  data_train = NULL,
  col_clust = FALSE,
  y_grid = NULL,
  prior_mean = NULL,
  heatmap = FALSE,
  prob_CI = 0.95
)
}
\arguments{
\item{pred}{A tibble or data frame, typically coming from
\code{\link{pred_magmaclust}} function.
Required columns: 'Input', 'Mean', 'Var'. Additional covariate columns may be
present in case of multi-dimensional inputs.}

\item{x_input}{A vector of character strings, indicating which input should
be displayed. If NULL(default) the 'Input' column is used for the x-axis.
If providing a 2-dimensional vector, the corresponding columns are used
for the x-axis and y-axis.}

\item{cluster}{A string indicating the cluster to plot from or
'all' for the full GPs mixture.}

\item{data}{tibble of observational data, columns required : 'Input', 'Output'}

\item{data_train}{tibble of training dataset, columns required : 'Input', 'Output'}

\item{col_clust}{A boolean indicating whether we color according to
clusters or individuals.}

\item{y_grid}{A vector, indicating the grid of values on the y-axis for which
probabilities should be computed for heatmaps of 1-dimensional
predictions.}

\item{prior_mean}{(Optional) A tibble or a data frame, containing the 'Input'
and associated 'Output' prior mean parameter of the GP prediction.}

\item{heatmap}{A logical value indicating whether the GP prediction should be
represented as a heatmap of probabilities for 1-dimensional inputs. If
FALSE (default), the mean curve and associated 95\%CI are displayed.}

\item{prob_CI}{A number between 0 and 1 (default is 0.95), indicating the
level of the Credible Interval associated with the posterior mean curve.}
}
\value{
Plot of the predicted curve of the GP with the 0.95 confidence interval
}
\description{
Plot MagmaClust or GP predictions
}
\examples{
data_train <- simu_db(covariate = FALSE, common_input = FALSE)
training_test <- train_magma_VEM(data_train)

data_obs <- simu_db(M=1, covariate = FALSE)
grid_inputs = c(seq(min(data_obs$Input), max(data_obs$Input), length.out = 500),
  data_obs$Input) \%>\% unique
pred <- pred_magmaclust(data_obs, data_train, trained_magmaclust = training_test,
  grid_inputs = grid_inputs)

plot_magmaclust(pred, data = data_obs, data_train = data_train)


}
