% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/V-em-algorithm.R
\name{m_step_VEM}
\alias{m_step_VEM}
\title{Variation of the M-Step of the EM algorithm}
\usage{
m_step_VEM(
  db,
  old_hp_k,
  old_hp_i,
  list_mu_param,
  kern_0,
  kern_i,
  m_k,
  common_hp_k,
  common_hp_i,
  pen_diag
)
}
\arguments{
\item{db}{A tibble or data frame. Columns required: ID, Input, Output.
Additional columns for covariates can be specified.}

\item{old_hp_k}{A named vector, tibble or data frame, containing the hyper-parameters
from the previous M-step (or initialisation) associated with the clusters.}

\item{old_hp_i}{A named vector, tibble or data frame, containing the hyper-parameters
from the previous M-step (or initialisation) associated with the
individual GPs.}

\item{list_mu_param}{List of parameters of the K mean GPs.}

\item{kern_0}{kernel used to compute the covariance matrix of the mean GP at corresponding timestamps (K_0)}

\item{kern_i}{kernel used to compute the covariance matrix of individuals GP at corresponding timestamps (Psi_i)}

\item{m_k}{prior value of the mean parameter of the mean GPs (mu_k). Length = 1 or nrow(unique(db$Input))}

\item{common_hp_k}{boolean indicating whether hp are common among mean GPs (for each mu_k)}

\item{common_hp_i}{boolean indicating whether hp are common among individual GPs (for each y_i)}

\item{pen_diag}{A number. A jitter term, added on the diagonal to prevent
numerical issues when inverting nearly singular matrices.}
}
\value{
Set of optimised hyper parameters for the different kernels of the model, and the pi_k
}
\description{
Maximization step of the variation of the EM algorithm to compute hyper-parameters of all the
kernels involved in Magma.
}
\examples{
## Common inputs across individuals and different HPs
k = seq_len(4)
m_k <- c("K1" = 0, "K2" = 0, "K3" = 0, "K4" = 0)

db <- simu_db(N = 10, common_input = TRUE)
hp_k <- MagmaClustR:::hp("SE", list_ID = names(m_k))
hp_i <- MagmaClustR:::hp("SE", list_ID = unique(db$ID))

old_tau_i_k = MagmaClustR:::ini_tau_i_k(db = db, k = length(k), nstart = 50)
hp_k[['pi']] = sapply( old_tau_i_k, function(x) x \%>\% unlist() \%>\% mean() )

post = MagmaClustR:::e_step_VEM(db, m_k, "SE", "SE", hp_k, hp_i, old_tau_i_k ,0.001)

MagmaClustR:::m_step_VEM(db, hp_k, hp_i, post, "SE", "SE", m_k, TRUE, TRUE, 0.1)

}
