% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kernel-to-matrices.R
\name{kern_to_inv}
\alias{kern_to_inv}
\title{Create inverse of a covariance matrix from a kernel}
\usage{
kern_to_inv(input, kern, hp, pen_diag = 0)
}
\arguments{
\item{input}{A vector, matrix, data frame or tibble containing all inputs for
one individual. If a vector, the elements are used as reference, otherwise,
one column should be named 'Input' to indicate that it represents the
reference (e.g. 'Input' would contain the timestamps in time-series
applications). The other columns are considered as being covariates. If
no column is named 'Input', the first one is used by default.}

\item{kern}{A kernel function. Several popular kernels
(see \href{https://www.cs.toronto.edu/~duvenaud/cookbook/}{The Kernel
Cookbook}) are already implemented and can be selected within the
following list:
\itemize{
\item "SE": (default value) the Squared Exponential Kernel (also called
Radial Basis Function or Gaussian kernel),
\item "PERIO": the Periodic kernel,
\item "RQ": the Rational Quadratic kernel.
}}

\item{hp}{A list, data frame or tibble containing the hyper-parameters used
in the kernel. The name of the elements (or columns) should correspond
exactly to those used in the kernel definition.}

\item{pen_diag}{A jitter term that is added to the covariance matrix to avoid
numerical issues when inverting, in cases of nearly singular matrices.}
}
\value{
The inverse of a covariance matrix, which elements are evaluations of
the associated kernel for each pair of reference inputs.
}
\description{
\code{kern_to_inv()} creates the inverse of a covariance matrix between
input values (that could be either scalars or vectors) evaluated within
a kernel function, which is characterised by specified hyper-parameters.
This matrix is a finite-dimensional evaluation of the
infinite-dimensional covariance structure of a GP, defined thanks to this
kernel.
}
\examples{
kern_to_inv(
  rbind(c(1, 0, 1), c(2, 1, 2), c(1, 2, 3)),
  "SE",
  tibble::tibble(variance = 1, lengthscale = 0.5)
)
}
